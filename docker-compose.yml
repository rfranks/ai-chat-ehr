version: "3.9"

services:
  api-gateway:
    image: ai-chat-ehr-api-gateway:latest
    build:
      context: .
      dockerfile: services/api_gateway/Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ai-chat-ehr-base:latest}
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      prompt-catalog:
        condition: service_started
      patient-context:
        condition: service_started
      chain-executor:
        condition: service_started

  prompt-catalog:
    image: ai-chat-ehr-prompt-catalog:latest
    build:
      context: .
      dockerfile: services/prompt_catalog/Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ai-chat-ehr-base:latest}
    env_file:
      - .env
    ports:
      - "8001:8001"
    depends_on:
      - redis

  patient-context:
    image: ai-chat-ehr-patient-context:latest
    build:
      context: .
      dockerfile: services/patient_context/Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ai-chat-ehr-base:latest}
    env_file:
      - .env
    ports:
      - "8002:8002"
    depends_on:
      - redis

  chain-executor:
    image: ai-chat-ehr-chain-executor:latest
    build:
      context: .
      dockerfile: services/chain_executor/Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ai-chat-ehr-base:latest}
    env_file:
      - .env
    ports:
      - "8003:8003"
    depends_on:
      prompt-catalog:
        condition: service_started
      patient-context:
        condition: service_started
      redis:
        condition: service_started

  anonymizer:
    image: ai-chat-ehr-anonymizer:latest
    build:
      context: .
      dockerfile: services/anonymizer/Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ai-chat-ehr-base:latest}
    command: >-
      uvicorn services.anonymizer.main:app
      --host 0.0.0.0
      --port 8004
    env_file:
      - .env
    environment:
      ANONYMIZER_DB_URL: ${ANONYMIZER_DB_URL:-postgresql+asyncpg://anonymizer:anonymizer@postgres:5432/anonymizer}
      LOG_LEVEL: ${ANONYMIZER_LOG_LEVEL:-info}
    volumes:
      - ./services/anonymizer:/app/services/anonymizer
      - ./shared:/app/shared
      - ./repositories:/app/repositories
    ports:
      - "8004:8004"
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-anonymizer}
      POSTGRES_USER: ${POSTGRES_USER:-anonymizer}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-anonymizer}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U "${POSTGRES_USER:-anonymizer}" -d "${POSTGRES_DB:-anonymizer}"
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
